{"ast":null,"code":"import _defineProperty from \"/home/ashish/bmi-calculator/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/ashish/bmi-calculator/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ashish/bmi-calculator/src/components/BmiForm/BmiForm.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../App/App.css';\nconst initialValues = {\n  weight: '',\n  height: '',\n  date: ''\n};\n\nconst BmiForm = ({\n  change\n}) => {\n  const _useState = useState(initialValues),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const handleChange = e => {\n    let _e$target = e.target,\n        value = _e$target.value,\n        name = _e$target.name;\n\n    if (value > 999) {\n      value = 999;\n    }\n\n    const date = new Date().toLocaleString().split(',')[0];\n    setState(_objectSpread({}, state, {\n      [name]: value,\n      date\n    }));\n  };\n\n  const handleSubmit = () => {\n    change(state);\n    setState(initialValues);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col m6 s12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"weight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Weight (in kg)\"), React.createElement(\"input\", {\n    id: \"weight\",\n    name: \"weight\",\n    type: \"number\",\n    min: \"1\",\n    max: \"999\",\n    placeholder: \"50\",\n    value: state.weight,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col m6 s12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"height\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Height (in cm)\"), React.createElement(\"input\", {\n    id: \"height\",\n    name: \"height\",\n    type: \"number\",\n    min: \"1\",\n    max: \"999\",\n    placeholder: \"176\",\n    value: state.height,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"bmi-btn\",\n    className: \"calculate-btn\",\n    type: \"button\",\n    disabled: state.weight === '' || state.height === '',\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Calculate BMI\")));\n};\n\nBmiForm.propTypes = {\n  change: PropTypes.func.isRequired\n};\nexport default BmiForm;","map":{"version":3,"sources":["/home/ashish/bmi-calculator/src/components/BmiForm/BmiForm.jsx"],"names":["React","useState","PropTypes","initialValues","weight","height","date","BmiForm","change","state","setState","handleChange","e","target","value","name","Date","toLocaleString","split","handleSubmit","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../App/App.css';\n\nconst initialValues = {\n\tweight: '',\n\theight: '',\n\tdate: ''\n}\n\nconst BmiForm = ({ change }) => {\n\tconst [state, setState] = useState(initialValues);\n\n\tconst handleChange = e => {\n\t\tlet { value, name } = e.target;\n\t\tif (value > 999) {\n\t\t\tvalue = 999;\n\t\t}\n\t\tconst date = new Date().toLocaleString().split(',')[0];\n\t\tsetState({\n\t\t\t...state,\n\t\t\t[name]: value,\n\t\t\tdate\n\t\t});\n\t};\n\n\tconst handleSubmit = () => {\n\t\tchange(state);\n\t\tsetState(initialValues);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col m6 s12\">\n\t\t\t\t\t<label htmlFor=\"weight\">Weight (in kg)</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"weight\"\n\t\t\t\t\t\tname=\"weight\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\tmax=\"999\"\n\t\t\t\t\t\tplaceholder=\"50\"\n\t\t\t\t\t\tvalue={state.weight}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"col m6 s12\">\n\t\t\t\t\t<label htmlFor=\"height\">Height (in cm)</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"height\"\n\t\t\t\t\t\tname=\"height\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\tmax=\"999\"\n\t\t\t\t\t\tplaceholder=\"176\"\n\t\t\t\t\t\tvalue={state.height}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"center\">\n\t\t\t\t<button\n\t\t\t\t\tid=\"bmi-btn\"\n\t\t\t\t\tclassName=\"calculate-btn\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tdisabled={state.weight === '' || state.height === ''}\n\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t>\n\t\t\t\t\tCalculate BMI\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nBmiForm.propTypes = {\n\tchange: PropTypes.func.isRequired\n};\n\nexport default BmiForm;\n"]},"metadata":{},"sourceType":"module"}